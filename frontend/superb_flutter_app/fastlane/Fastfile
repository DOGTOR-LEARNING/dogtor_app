default_platform(:ios)

platform :ios do
  before_all do
    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "120"
  end

  desc "Build iOS app with manual code signing for CI"
  lane :build do
    setup_ci if ENV['CI']

    # Ë®≠ÂÆö App Store Connect APIÔºàÂæûÁí∞Â¢ÉËÆäÊï∏ËÆÄÂèñÔºâ
    if ENV['CI']
      api_key = app_store_connect_api_key(
        key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
        issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
        key_content: ENV['APP_STORE_CONNECT_API_KEY']
      )
    end
    
    # 1) Ë®≠ÁΩÆ Flutter Áí∞Â¢É
    sh("flutter", "clean")
    sh("flutter", "pub", "get")
    # ÂàáÊèõÂà∞ iOS ÁõÆÈåÑÂü∑Ë°å pod install
    #Dir.chdir(File.expand_path("../ios", __dir__)) do
    #  sh("pod", "install")
    #end

    # 2) CocoaPodsÔºàÂú® ios ÁõÆÈåÑÂ∫ï‰∏ãÔºâ
    cocoapods(
      podfile: "ios/Podfile",
      try_repo_update_on_error: true,
      clean_install: true,   # Á≠âÂêå pod install --clean-installÔºàÈÅøÂÖçÊÆòÁïôÔºâ
      repo_update: false     # ÈúÄË¶ÅÊôÇÊâçË®≠ trueÔºõËàá try_repo_update_on_error ‰∫íÊñ•
    )
    
    # ‰∏ãËºâÂåπÈÖçÁöÑË≠âÊõ∏ÂíåÊèèËø∞Ê™îÊ°à
    match(
      type: "development",
      readonly: true,
      api_key: api_key, # ÂæûÁí∞Â¢ÉËÆäÊï∏ËÆÄÂèñ
      clone_branch_directly: true
    )

    # Ë®≠ÂÆöÊâãÂãïÁ∞ΩÁ´†
    TEAM   = "623TA8PLPU"
    BUNDLE = "com.dogtor.superbFlutterApp"
    PROF   = "match Development #{BUNDLE}"

    # Âº∑Âà∂Ë®≠ÂÆöÁÇ∫ÊâãÂãïÁ∞ΩÁ´†
    update_code_signing_settings(
      path: "ios/Runner.xcodeproj", 
      use_automatic_signing: false, 
      team_id: TEAM, 
      targets: ["Runner"]
    )


    # Âæû match ‰∏ãËºâÁöÑ profiles ‰∏≠ÊäìÂà∞ÂØ¶ÈöõÊ™îÊ°àË∑ØÂæë
    profile_path = get_provisioning_profile(
      app_identifier: BUNDLE,
      development: true,
      #readonly: true,
      api_key: api_key # ÂæûÁí∞Â¢ÉËÆäÊï∏ËÆÄÂèñ
    )
    
    # Á∂ÅÂÆö Release ÁµÑÊÖãÁöÑ Provisioning Profile
    update_project_provisioning(
      xcodeproj: "ios/Runner.xcodeproj",
      target_filter: "Runner",
      build_configuration: "Release",
      # profile: profile_path
      # Âª∫Ë≠∞ÔºöÁõ¥Êé•ÁúÅÁï• profileÔºåÊúÉÁî® SIGH_PROFILE_PATH È†êË®≠
      profile: lane_context[SharedValues::SIGH_PROFILE_PATH]
    )

    # ÊßãÂª∫ÊáâÁî®
    build_app(
      workspace: File.expand_path("../ios/Runner.xcworkspace", __dir__),
      scheme: "Runner",
      configuration: "Release",
      export_method: "development",
      #export_options: { 
      #  provisioningProfiles: { BUNDLE => PROF } 
      #},
      xcargs: [
        "DEVELOPMENT_TEAM=#{TEAM}",
        "CODE_SIGN_STYLE=Manual",
        "PRODUCT_BUNDLE_IDENTIFIER=#{BUNDLE}",
        # "PROVISIONING_PROFILE_SPECIFIER='match Development #{BUNDLE}'" # Avoid affecting other third-party plugins 
      ].join(" "),
      output_directory: "./build",
      output_name: "Runner.ipa",
      include_symbols: true
    )
    
    UI.success("‚úÖ iOS build completed successfully!")
  end

  desc "Deploy to TestFlight"
  lane :beta do
    setup_ci if ENV['CI']
    
    # Ë®≠ÁΩÆ Flutter Áí∞Â¢É
    sh("flutter", "clean")
    sh("flutter", "pub", "get")
    
    # CocoaPods
    cocoapods(
      podfile: "ios/Podfile",
      try_repo_update_on_error: true,
      clean_install: true,
      repo_update: false
    )
    
    match(
      type: "appstore",
      readonly: true,
      clone_branch_directly: true
    )
    
    # Ë®≠ÂÆöÊâãÂãïÁ∞ΩÁ´†
    TEAM   = "623TA8PLPU"
    BUNDLE = "com.dogtor.superbFlutterApp"
    PROF   = "match AppStore #{BUNDLE}"

    # Âº∑Âà∂Ë®≠ÂÆöÁÇ∫ÊâãÂãïÁ∞ΩÁ´†
    update_code_signing_settings(
      path: "ios/Runner.xcodeproj", 
      use_automatic_signing: false, 
      team_id: TEAM, 
      targets: ["Runner"]
    )
    
    # Á∂ÅÂÆö Release ÁµÑÊÖãÁöÑ Provisioning Profile
    update_project_provisioning(
      xcodeproj: "ios/Runner.xcodeproj",
      target_filter: "Runner",
      build_configuration: "Release",
      profile: PROF
    )
    
    # Ëá™ÂãïÂ¢ûÂä† build number
    increment_build_number(
      xcodeproj: "ios/Runner.xcodeproj"
    )
    
    build_app(
      workspace: "ios/Runner.xcworkspace",
      scheme: "Runner",
      configuration: "Release",
      export_method: "app-store",
      export_options: { 
        provisioningProfiles: { BUNDLE => PROF } 
      },
      xcargs: [
        "DEVELOPMENT_TEAM=#{TEAM}",
        "CODE_SIGN_STYLE=Manual",
        "PRODUCT_BUNDLE_IDENTIFIER=#{BUNDLE}",
        "PROVISIONING_PROFILE_SPECIFIER='#{PROF}'"
      ].join(" "),
      output_directory: "./build",
      output_name: "Runner.ipa",
      include_symbols: true
    )
    
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      changelog: "New beta build from CI/CD"
    )
    
    UI.success("üöÄ App successfully uploaded to TestFlight!")
  end

  desc "Deploy to App Store"
  lane :deploy do
    setup_ci if ENV['CI']
    
    # Ë®≠ÁΩÆ Flutter Áí∞Â¢É
    sh("flutter", "clean")
    sh("flutter", "pub", "get")
    
    # CocoaPods
    cocoapods(
      podfile: "ios/Podfile",
      try_repo_update_on_error: true,
      clean_install: true,
      repo_update: false
    )
    
    match(
      type: "appstore",
      readonly: true,
      clone_branch_directly: true
    )
    
    # Ë®≠ÂÆöÊâãÂãïÁ∞ΩÁ´†
    TEAM   = "623TA8PLPU"
    BUNDLE = "com.dogtor.superbFlutterApp"
    PROF   = "match AppStore #{BUNDLE}"

    # Âº∑Âà∂Ë®≠ÂÆöÁÇ∫ÊâãÂãïÁ∞ΩÁ´†
    update_code_signing_settings(
      path: "ios/Runner.xcodeproj", 
      use_automatic_signing: false, 
      team_id: TEAM, 
      targets: ["Runner"]
    )
    
    # Á∂ÅÂÆö Release ÁµÑÊÖãÁöÑ Provisioning Profile
    update_project_provisioning(
      xcodeproj: "ios/Runner.xcodeproj",
      target_filter: "Runner",
      build_configuration: "Release",
      profile: PROF
    )
    
    build_app(
      workspace: "ios/Runner.xcworkspace",
      scheme: "Runner",
      configuration: "Release",
      export_method: "app-store",
      export_options: { 
        provisioningProfiles: { BUNDLE => PROF } 
      },
      xcargs: [
        "DEVELOPMENT_TEAM=#{TEAM}",
        "CODE_SIGN_STYLE=Manual",
        "PRODUCT_BUNDLE_IDENTIFIER=#{BUNDLE}",
        "PROVISIONING_PROFILE_SPECIFIER='#{PROF}'"
      ].join(" "),
      output_directory: "./build",
      output_name: "Runner.ipa",
      include_symbols: true
    )
    
    upload_to_app_store(
      submit_for_review: false,
      automatic_release: false,
      force: true,
      skip_metadata: false,
      skip_screenshots: true,
      precheck_include_in_app_purchases: false
    )
    
    UI.success("üè™ App successfully uploaded to App Store Connect!")
  end
end
